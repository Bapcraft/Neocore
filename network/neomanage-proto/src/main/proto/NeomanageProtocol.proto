package io.neocore.manage.proto;

message RegisterClient {
	
	required string name = 1;
	
	enum ClientType {
		
		UNDEFINED = 0;
		
		SERVER = 1;
		UTILITY = 2;
		
	}
	
	required ClientType clientType = 2;
	
	optional ServerClient clientServer = 3;
	
}

message ServerClient {
	
	enum ServerType {
		
		UNDEFINED = 0;
		
		GAME = 1;
		PROXY = 2;
		
	}
	
	enum ServerRole {
		
		FRONTEND = 1;
		HIDDEN_GAME = 2;
		
	}
	
	required ServerType serverType = 1;
	required ServerRole serverRole = 2;
	
	optional string serverName = 3;
	optional string proxyName = 4;
	
}

message ClientMessage {
	
	oneof message {
		
		SetLockState lockStateMessage = 1;
		UnregisterServer unregMessage = 2;
		
	}
	
}

message SetLockState {
	
	enum LockType {
		
		PLAYER = 1;
		SESSION = 2;
		
	}
	
	required string uuid = 1;
	required LockType type = 2;
	
	required bool state = 3;
	
}

message UnregisterServer {
	
	enum UnregisterReason {
		
		SHUTDOWN = 0;
		CRASH = 1;
		
		OTHER = 2;
		
	}
	
	required UnregisterReason reason = 1;
	optional string reasonStr = 2;
	
}

